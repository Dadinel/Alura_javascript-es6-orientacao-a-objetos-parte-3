{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","listaAtual","obterNegociacoes","filter","some","negociacao","isEquals","negociacaoExistente","Error","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\n    \n    constructor() {\n        \n        this._http = new HttpService();\n    }\n    \n    obterNegociacoesDaSemana() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    //console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                });  \n       });        \n    }\n    \n    obterNegociacoesDaSemanaAnterior() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    //console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });  \n       }); \n       \n        \n    }\n    \n    obterNegociacoesDaSemanaRetrasada() {\n       \n       return new Promise((resolve, reject) => {\n        \n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    //console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                });  \n       }); \n    }    \n    \n    \n    obterNegociacoes() {\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ]).then(periodos => {\n\n                let negociacoes = periodos\n                    .reduce((dados, periodo) => dados.concat(periodo), [])\n                    .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n                resolve(negociacoes);\n\n            }).catch(erro => reject(erro));\n        });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes => negociacoes.filter( \n                    negociacao => !listaAtual.some(\n                        negociacaoExistente => negociacao.isEquals(negociacaoExistente) //JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)\n                    )\n                )\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar as negociações para importar.');\n            });\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory.getConnection()\n            .then( connection => new NegociacaoDao(connection))\n            .then( dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso.' )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar a negociação.');\n            });\n    }\n\n    lista() {\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações.');\n            });\n    }\n\n    apaga() {\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso.')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações.');\n            });\n    }\n}"]}