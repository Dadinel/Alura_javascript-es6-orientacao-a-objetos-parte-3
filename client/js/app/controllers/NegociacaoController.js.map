{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemaAtual","_service","NegociacaoService","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n        \n        let $ = document.querySelector.bind(document);\n        \n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n        this._ordemaAtual = '';\n        this._service = new NegociacaoService();\n         \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(), \n            new NegociacoesView($('#negociacoesView')), \n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n       \n        this._mensagem = new Bind(\n            new Mensagem(), new MensagemView($('#mensagemView')),\n            'texto');\n\n        /*ConnectionFactory\n            .getConnection()\n            .then(connection => {\n                new NegociacaoDao(connection)\n                    .listaTodos()\n                    .then(negociacoes => {\n                        negociacoes.forEach(negociacao => {\n                            this._listaNegociacoes.adiciona(negociacao);\n                        })\n                    })\n                    .catch(erro => this._mensagem.texto = erro);\n            })\n            .catch(erro => this._mensagem.texto = erro);*/\n\n        this._init();\n    }\n\n    _init() {\n        /*ConnectionFactory\n        .getConnection()\n        .then(connection => new NegociacaoDao(connection))\n        .then(dao => dao.listaTodos())\n        .then(\n            negociacoes => negociacoes.forEach(\n                negociacao => this._listaNegociacoes.adiciona(negociacao)))\n        .catch(erro => this._mensagem.texto = erro);*/\n\n        this._service.lista()\n            .then(negociacoes => negociacoes.forEach(\n                negociacao => this._listaNegociacoes.adiciona(negociacao)))\n            .catch(erro => this._mensagem.texto = erro );\n\n        setInterval( () => {\n            this.importaNegociacoes();\n        }, 15000 );\n    }\n\n    adiciona(event) {\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service.cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n        /*ConnectionFactory.getConnection()\n            .then( connection => {\n                let negociacao = this._criaNegociacao();\n\n                new NegociacaoDao(connection)\n                    .adiciona(negociacao)\n                    .then(() => {\n                        this._listaNegociacoes.adiciona(negociacao);\n                        this._mensagem.texto = 'Negociação adicionada com sucesso.'; \n                        this._limpaFormulario();\n                    })\n                    .catch((erro) => this._mensagem.texto = erro);\n            });*/\n\n        /*event.preventDefault();\n        this._listaNegociacoes.adiciona(this._criaNegociacao());\n        this._mensagem.texto = 'Negociação adicionada com sucesso'; \n        this._limpaFormulario();*/\n    }\n    \n    importaNegociacoes() {\n        this._service.importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociações do período importadas.';\n            }))\n            .catch(erro => this._mensagem.texto = erro);\n\n        /*this._service.obterNegociacoes()\n            .then(negociacoes => negociacoes.filter( \n                //negociacao => this._listaNegociacoes.negociacoes.indexOf(negociacao) == -1\n                    negociacao => !this._listaNegociacoes.negociacoes.some(\n                        negociacaoExistente => JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)\n                    )\n                )\n            )\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociações do período importadas.';\n            }))\n            .catch(erro => this._mensagem.texto = erro);*/\n    }\n\n    apaga() {\n        \n        /*this._listaNegociacoes.esvazia();\n        this._mensagem.texto = 'Negociações apagadas com sucesso.';*/\n\n        this._service.apaga()\n            .then( mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.esvazia();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n        /*ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia();\n                this._mensagem.texto = mensagem;\n            })\n            .catch(erro => this._mensagem.texto = erro);*/\n    }\n    \n    _criaNegociacao() {\n        \n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));\n    }\n    \n    _limpaFormulario() {\n     \n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();   \n    }\n\n    ordena(coluna) {\n        if(coluna == this._ordemaAtual) {\n            this._listaNegociacoes.inverteOrdem()\n        }\n        else {\n            this._listaNegociacoes.ordena((a,b) => a[coluna] - b[coluna]);\n        }\n        this._ordemaAtual = coluna;\n    }\n}"]}